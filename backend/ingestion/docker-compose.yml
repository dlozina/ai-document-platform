version: '3.8'

services:
  ingestion-service:
    build: .
    ports:
      - "8003:8003"
    environment:
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ingestion_db
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OCR_SERVICE_URL=http://ocr-service:8000
      - NER_SERVICE_URL=http://ner-service:8001
      - EMBEDDING_SERVICE_URL=http://embedding-service:8002
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
    depends_on:
      - postgres
      - minio
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery-worker:
    build: .
    command: celery -A src.celery_app worker --loglevel=info --concurrency=3
    environment:
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ingestion_db
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=false
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OCR_SERVICE_URL=http://ocr-service:8000
      - NER_SERVICE_URL=http://ner-service:8001
      - EMBEDDING_SERVICE_URL=http://embedding-service:8002
    volumes:
      - ./src:/app/src:ro
    depends_on:
      - postgres
      - minio
      - redis
    restart: unless-stopped
    deploy:
      replicas: 2  # Run 2 worker instances

  flower:
    build: .
    command: celery -A src.celery_app flower --port=5555 --basic_auth=admin:admin
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ingestion_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  minio_data:
  redis_data:
