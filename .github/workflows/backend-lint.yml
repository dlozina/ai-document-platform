name: Backend Lint and Format Check

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install development dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements-dev.txt

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Run pre-commit on all files
      run: |
        cd backend
        pre-commit run --all-files

    - name: Check code formatting with Black
      run: |
        cd backend
        black --check --diff .

    - name: Check import sorting with isort
      run: |
        cd backend
        isort --check-only --diff .

    - name: Run Ruff linter
      run: |
        cd backend
        ruff check .

    - name: Run type checking with mypy
      run: |
        cd backend
        mypy . --ignore-missing-imports --no-strict-optional

    - name: Upload linting results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: linting-results
        path: |
          backend/bandit-report.json
          backend/mypy-report.txt
